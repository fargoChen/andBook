package com.im.widget;

import android.text.Layout;
import android.text.Selection;
import android.text.Spannable;
import android.text.method.LinkMovementMethod;
import android.text.style.ClickableSpan;
import android.view.MotionEvent;
import android.widget.TextView;

/**
 * when using Linkify add urllinks to TextView, the link is alos opened by longClick. deal to resolve that problem, set
 * #LinkLongMethod as the MovementMethod of TextView.
 */

public class LinkLongMethod extends LinkMovementMethod {
    private boolean mHandledLong = false;
    private Runnable handleLongClick = new Runnable() {
        @Override
        public void run() {
            mHandledLong = true;
//            mWidget.performLongClick();

        }
    };
    @Override
    public boolean onTouchEvent(TextView widget, Spannable buffer, MotionEvent event) {
        int action = event.getAction();

        if (action == MotionEvent.ACTION_UP ||
                action == MotionEvent.ACTION_DOWN) {
            int x = (int) event.getX();
            int y = (int) event.getY();

            x -= widget.getTotalPaddingLeft();
            y -= widget.getTotalPaddingTop();

            x += widget.getScrollX();
            y += widget.getScrollY();

            Layout layout = widget.getLayout();
            int line = layout.getLineForVertical(y);
            int off = layout.getOffsetForHorizontal(line, x);

            ClickableSpan[] link = buffer.getSpans(off, off, ClickableSpan.class);

            if (link.length != 0) {
                if (action == MotionEvent.ACTION_UP) {
                    if (!mHandledLong) {
                        link[0].onClick(widget);
                        widget.removeCallbacks(handleLongClick);
                    }
                } else if (action == MotionEvent.ACTION_DOWN) {
                    mHandledLong = false;
                    widget.removeCallbacks(handleLongClick);
                    widget.postDelayed(handleLongClick, 500);
                    Selection.setSelection(buffer,
                            buffer.getSpanStart(link[0]),
                            buffer.getSpanEnd(link[0]));
                }

                return true;
            } else {
                Selection.removeSelection(buffer);
            }
        }

        return super.onTouchEvent(widget, buffer, event);
    }

    public static LinkMovementMethod sInstance;
    public static LinkMovementMethod getInstance() {
        if (sInstance == null)
            sInstance = new LinkLongMethod();

        return sInstance;
    }
}
